name: Release Wave

on:
  push:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERSION: "1.6.5-test"
  TAG: "v1.6.5-test"

permissions:
  id-token: write
  contents: write

jobs:
  release:
    name: Release Wave
    runs-on: ubuntu-20.04

    outputs:
      build-version: ${{ env.VERSION }}

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GIT_TOKEN }}

      # - uses: r-lib/actions/setup-r@v2
      # - uses: r-lib/actions/setup-r-dependencies@v2
      #   with:
      #     working-directory: ./r

      - name: Publish apps for Cloud
        run: make build-apps

      - name: Download H2O CLI
        working-directory: ./py/tmp/tour/
        run: mkdir -p .bin && curl -o .bin/h2o https://h2oai-cloud-release.s3.amazonaws.com/releases/ai/h2o/h2o-cloud/latest/cli/linux-amd64/h2o

      - name: Change permissions
        working-directory: ./py/tmp/tour/
        run: chmod +x .bin/h2o

      - name: Make air-gapped bundle
        working-directory: ./py/tmp/tour/
        run: .bin/h2o bundle

      - uses: actions/upload-artifact@v4
        with:
          name: wave-bundle
          path: |
            ./py/tmp/tour/*.Dockerfile
            ./py/tmp/tour/*.wave

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::353750902984:role/GitHub-OIDC-Role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: "Ensure ECR Repository for the bundle"
        # Tries to describe the repository and if it fails, creates it
        run: |
          aws ecr describe-repositories \
            --repository-names h2oai/tour-bundle 2>/dev/null ||
          aws ecr create-repository \
            --repository-name h2oai/tour-bundle \
            --image-tag-mutability IMMUTABLE \
            --tag \
              Key=GithubRepo,Value=github.com/h2oai/${{ github.event.repository.name }} \
              Key=ManagedBy,Value=GitHubActions \
              Key=CreatedByWorkflow,Value=${{ github.workflow_ref }}

      - name: Build and Export Bundle Image
        uses: docker/build-push-action@v6
        id: bundle-build
        with:
          push: true
          context: ./py/tmp/tour/
          file: ./Dockerfile-wave-bundle
          platforms: linux/amd64
          provenance: false
          build-args: VERSION=${{ env.VERSION }}
          tags: |
            353750902984.dkr.ecr.us-east-1.amazonaws.com/h2oai/tour-bundle:${{ env.VERSION }}

      - name: "Ensure ECR Repository for the runtime"
        # Tries to describe the repository and if it fails, creates it
        run: |
          aws ecr describe-repositories \
            --repository-names h2oai/tour 2>/dev/null ||
          aws ecr create-repository \
            --repository-name h2oai/tour \
            --image-tag-mutability IMMUTABLE \
            --tag \
              Key=GithubRepo,Value=github.com/h2oai/${{ github.event.repository.name }} \
              Key=ManagedBy,Value=GitHubActions \
              Key=CreatedByWorkflow,Value=${{ github.workflow_ref }}

      - name: Build and Export Runtime Image
        uses: docker/build-push-action@v6
        id: runtime-build
        with:
          push: true
          context: ./py/tmp/tour/
          file: ./Dockerfile-runtime
          platforms: linux/amd64
          provenance: false
          build-args: VERSION=${{ env.VERSION }}
          tags: |
            353750902984.dkr.ecr.us-east-1.amazonaws.com/h2oai/tour:${{ env.VERSION }}

      - name: Published Images Summary
        run: |
          echo "#### Wave Runtime Image" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "docker image push 353750902984.dkr.ecr.us-east-1.amazonaws.com/h2oai/tour:${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Remove files in tmp folder
        run: make remove-build-apps-directory