(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{143:function(e,s,n){"use strict";n.r(s),n.d(s,"frontMatter",(function(){return r})),n.d(s,"metadata",(function(){return u})),n.d(s,"rightToc",(function(){return o})),n.d(s,"default",(function(){return c}));var t=n(2),i=n(6),a=(n(0),n(292)),r={title:"Issue Tracker"},u={unversionedId:"examples/issue-tracker",id:"examples/issue-tracker",isDocsHomePage:!1,title:"Issue Tracker",description:"Implement a simple issue tracker using a table to create master-detail views.",source:"@site/docs/examples/issue-tracker.md",slug:"/examples/issue-tracker",permalink:"/wave/docs/examples/issue-tracker",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/examples/issue-tracker.md",version:"current",sidebar:"someSidebar",previous:{title:"Wizard",permalink:"/wave/docs/examples/wizard"},next:{title:"Dashboard",permalink:"/wave/docs/examples/dashboard"}},o=[],l={rightToc:o};function c(e){var s=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},l,r,{components:s,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Implement a simple issue tracker using a table to create master-detail views."),Object(a.b)("div",{className:"cover",style:{backgroundImage:"url("+n(363).default+")"}}),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-py"}),"from h2o_wave import main, app, Q, ui\nfrom faker import Faker\n\nfake = Faker()\n\n_id = 0\n\n\nclass Issue:\n    def __init__(self, text: str, status: str):\n        global _id\n        _id += 1\n        self.id = f'I{_id}'\n        self.text = text\n        self.status = status\n        self.views = 0\n\n\n# Create some issues\nissues = [Issue(text=fake.sentence(), status='Open') for i in range(12)]\n\n# Build a lookup of issues for convenience\nissue_lookup = {issue.id: issue for issue in issues}\n\n# Create columns for our issue table.\ncolumns = [\n    ui.table_column(name='text', label='Issue'),\n    ui.table_column(name='status', label='Status'),\n    ui.table_column(name='views', label='Views'),\n]\n\n\ndef make_issue_table(allow_multiple_selection=False):\n    return ui.table(\n        name='issues',\n        columns=columns,\n        rows=[ui.table_row(name=issue.id, cells=[issue.text, issue.status, str(issue.views)]) for issue in issues],\n        multiple=allow_multiple_selection\n    )\n\n\nasync def edit_multiple(q: Q):\n    q.page['form'] = ui.form_card(\n        box='1 1 4 -1',\n        items=[\n            make_issue_table(allow_multiple_selection=True),  # This time, allow multiple selections\n            ui.buttons([\n                ui.button(name='reopen_issues', label='Reopen Selected', primary=True),\n                ui.button(name='close_issues', label='Close Selected', primary=True),\n                ui.button(name='back', label='Back to safety')\n            ]),\n        ]\n    )\n    await q.page.save()\n\n\nasync def show_issues(q: Q):\n    q.page['form'] = ui.form_card(\n        box='1 1 4 -1',\n        items=[\n            make_issue_table(),\n            ui.buttons([ui.button(name='edit_multiple', label='Edit Multiple...', primary=True)]),\n        ]\n    )\n    await q.page.save()\n\n\nasync def show_issue(q: Q, issue_id: str):\n    issue = issue_lookup[issue_id]\n    issue.views += 1\n\n    q.client.active_issue_id = issue_id\n\n    q.page['form'] = ui.form_card(\n        box='1 1 4 -1',\n        items=[\n            ui.text_xl(f'Issue {issue.id}'),\n            ui.text(issue.text),\n            ui.text_xs(f'({issue.views} views)'),\n            ui.buttons([\n                ui.button(\n                    name='close_issue' if issue.status == 'Open' else 'reopen_issue',\n                    label=\"Close Issue\" if issue.status == 'Open' else \"Reopen Issue\",\n                    primary=True,\n                ),\n                ui.button(name='back', label='Back'),\n            ]),\n        ]\n    )\n\n    await q.page.save()\n\n\nasync def close_issue(q: Q):\n    issue = issue_lookup[q.client.active_issue_id]\n    issue.status = 'Closed'\n    await show_issues(q)\n\n\nasync def close_issues(q: Q):\n    for issue_id in q.args.issues:\n        issue = issue_lookup[issue_id]\n        issue.status = 'Closed'\n    await show_issues(q)\n\n\nasync def reopen_issue(q: Q):\n    issue = issue_lookup[q.client.active_issue_id]\n    issue.status = 'Open'\n    await show_issues(q)\n\n\nasync def reopen_issues(q: Q):\n    for issue_id in q.args.issues:\n        issue = issue_lookup[issue_id]\n        issue.status = 'Open'\n    await show_issues(q)\n\n\n@app('/demo')\nasync def serve(q: Q):\n    if q.args.edit_multiple:\n        await edit_multiple(q)\n    elif q.args.reopen_issues:\n        await reopen_issues(q)\n    elif q.args.close_issues:\n        await close_issues(q)\n    elif q.args.reopen_issue:\n        await reopen_issue(q)\n    elif q.args.close_issue:\n        await close_issue(q)\n    elif q.args.issues:  # An issue was clicked on\n        await show_issue(q, q.args.issues[0])\n    else:\n        await show_issues(q)\n")))}c.isMDXComponent=!0},292:function(e,s,n){"use strict";n.d(s,"a",(function(){return p})),n.d(s,"b",(function(){return d}));var t=n(0),i=n.n(t);function a(e,s,n){return s in e?Object.defineProperty(e,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[s]=n,e}function r(e,s){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),n.push.apply(n,t)}return n}function u(e){for(var s=1;s<arguments.length;s++){var n=null!=arguments[s]?arguments[s]:{};s%2?r(Object(n),!0).forEach((function(s){a(e,s,n[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(n,s))}))}return e}function o(e,s){if(null==e)return{};var n,t,i=function(e,s){if(null==e)return{};var n,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],s.indexOf(n)>=0||(i[n]=e[n]);return i}(e,s);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],s.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),c=function(e){var s=i.a.useContext(l),n=s;return e&&(n="function"==typeof e?e(s):u(u({},s),e)),n},p=function(e){var s=c(e.components);return i.a.createElement(l.Provider,{value:s},e.children)},m={inlineCode:"code",wrapper:function(e){var s=e.children;return i.a.createElement(i.a.Fragment,{},s)}},f=i.a.forwardRef((function(e,s){var n=e.components,t=e.mdxType,a=e.originalType,r=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=c(n),f=t,d=p["".concat(r,".").concat(f)]||p[f]||m[f]||a;return n?i.a.createElement(d,u(u({ref:s},l),{},{components:n})):i.a.createElement(d,u({ref:s},l))}));function d(e,s){var n=arguments,t=s&&s.mdxType;if("string"==typeof e||t){var a=n.length,r=new Array(a);r[0]=f;var u={};for(var o in s)hasOwnProperty.call(s,o)&&(u[o]=s[o]);u.originalType=e,u.mdxType="string"==typeof e?e:t,r[1]=u;for(var l=2;l<a;l++)r[l]=n[l];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},363:function(e,s,n){"use strict";n.r(s),s.default=n.p+"assets/images/issue-tracker-f8f5460fa5058fa880076f1b4d032c9f.png"}}]);