(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{265:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return o})),t.d(a,"rightToc",(function(){return p})),t.d(a,"default",(function(){return c}));var l=t(2),n=t(6),r=(t(0),t(292)),i={title:"Plots"},o={unversionedId:"plotting",id:"plotting",isDocsHomePage:!1,title:"Plots",description:"Wave provides a versatile plotting API based on Leland Wilkinson's Grammar of Graphics.",source:"@site/docs/plotting.md",slug:"/plotting",permalink:"/wave/docs/plotting",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/plotting.md",version:"current",sidebar:"someSidebar",previous:{title:"Files",permalink:"/wave/docs/files"},next:{title:"Graphics",permalink:"/wave/docs/graphics"}},p=[{value:"Point",id:"point",children:[]},{value:"Interval",id:"interval",children:[{value:"Columns",id:"columns",children:[]},{value:"Bars",id:"bars",children:[]}]},{value:"Line",id:"line",children:[]},{value:"Path",id:"path",children:[]},{value:"Area",id:"area",children:[]},{value:"Area + Line",id:"area--line",children:[]},{value:"Polygon",id:"polygon",children:[]},{value:"Schema",id:"schema",children:[]},{value:"Other",id:"other",children:[]}],b={rightToc:p};function c(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(l.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Wave provides a versatile plotting API based on ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Leland_Wilkinson"}),"Leland Wilkinson's")," ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"http://www.springer.com/gp/book/9780387245447"}),"Grammar of Graphics"),"."),Object(r.b)("p",null,"A ",Object(r.b)("em",{parentName:"p"},"plot")," is a layered graphic, created using ",Object(r.b)("inlineCode",{parentName:"p"},"ui.plot()"),". Each layer displays ",Object(r.b)("em",{parentName:"p"},"marks"),", described by ",Object(r.b)("inlineCode",{parentName:"p"},"ui.mark()"),". The layers are rendered on top of each other to produce the final plot."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ui.mark()")," describes a collection of marks, not one mark. Since each ",Object(r.b)("inlineCode",{parentName:"p"},"ui.mark()")," describes one layer in the plot, it follows that all the marks on a layer are of the same ",Object(r.b)("inlineCode",{parentName:"p"},"type")," (its ",Object(r.b)("em",{parentName:"p"},"geometry"),"). A mark's ",Object(r.b)("inlineCode",{parentName:"p"},"type")," can be one of ",Object(r.b)("inlineCode",{parentName:"p"},"point"),", ",Object(r.b)("inlineCode",{parentName:"p"},"interval"),", ",Object(r.b)("inlineCode",{parentName:"p"},"line"),", ",Object(r.b)("inlineCode",{parentName:"p"},"path"),", ",Object(r.b)("inlineCode",{parentName:"p"},"area"),", ",Object(r.b)("inlineCode",{parentName:"p"},"polygon"),", ",Object(r.b)("inlineCode",{parentName:"p"},"schema"),", ",Object(r.b)("inlineCode",{parentName:"p"},"edge"),"."),Object(r.b)("p",null,"There are two ways to add plots to a page:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Use a plot card (",Object(r.b)("inlineCode",{parentName:"li"},"ui.plot_card()"),") and set its ",Object(r.b)("inlineCode",{parentName:"li"},"plot")," attribute using ",Object(r.b)("inlineCode",{parentName:"li"},"ui.plot()"),"."),Object(r.b)("li",{parentName:"ul"},"Use a form card (",Object(r.b)("inlineCode",{parentName:"li"},"ui.form_card()"),"), insert a visualization (",Object(r.b)("inlineCode",{parentName:"li"},"ui.visualization()"),") and set its ",Object(r.b)("inlineCode",{parentName:"li"},"plot")," attribute using ",Object(r.b)("inlineCode",{parentName:"li"},"ui.plot()"),".")),Object(r.b)("p",null,"Here's a short example that renders a scatterplot of random values between ","[0, 1]","."),Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-py"}),"import random\nfrom h2o_wave import site, data, ui\n\npage = site['/demo']\n\nv = page.add('example', ui.plot_card(\n    box='1 1 4 5',\n    title='Point',\n    data=data('price performance', 50, rows=[(random.random(), random.random()) for _ in range(50)]),\n    plot=ui.plot([\n        ui.mark(type='point', x='=price', y='=performance')\n    ])\n))\npage.save()\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"ui.plot()")," accepts a list of marks. ",Object(r.b)("a",Object(l.a)({parentName:"p"},{href:"examples/plot-point-annotation"}),"This example")," renders annotations on top of a scatterplot, like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(l.a)({parentName:"pre"},{className:"language-py"}),"ui.plot([\n    ui.mark(type='point', x='=price', y='=performance', x_min=0, x_max=100, y_min=0, y_max=100),  # the plot\n    ui.mark(x=50, y=50, label='point'),\n    ui.mark(x=40, label='vertical line'),\n    ui.mark(y=40, label='horizontal line'),\n    ui.mark(x=70, x0=60, label='vertical region'),\n    ui.mark(y=70, y0=60, label='horizontal region'),\n    ui.mark(x=30, x0=20, y=30, y0=20, label='rectangular region')\n])\n")),Object(r.b)("h2",{id:"point"},"Point"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point"}),"Basic"),": Make a scatterplot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-shapes"}),"Shapes"),": Make a scatterplot with categories encoded as mark shapes."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-sizes"}),"Sizes"),': Make a scatterplot with mark sizes mapped to a continuous variable (a "bubble plot").'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-map"}),"Map"),": Make a plot to compare quantities across categories. Similar to a heatmap, but using size-encoding instead of color-encoding."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-groups"}),"Groups"),": Make a scatterplot with categories encoded as colors."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-annotation"}),"Annotation"),": Add annotations (points, lines and regions) to a plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-point-custom"}),"Custom"),": Customize a plot's fill/stroke color, size and opacity.")),Object(r.b)("h2",{id:"interval"},"Interval"),Object(r.b)("h3",{id:"columns"},"Columns"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval"}),"Basic"),": Make a column plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-groups"}),"Groups"),": Make a grouped column plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-range"}),"Range"),": Make a column plot with each bar representing high/low (or start/end) values. Transposing this produces a gantt plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-labels"}),"Labels"),": Make a column plot with labels on each bar."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-stacked"}),"Stacked"),": Make a stacked column plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-stacked-grouped"}),"Stacked, Grouped"),": Make a column plot with both stacked and grouped bars."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-annotation"}),"Annotation"),": Add annotations to a column plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-theta"}),"Theta"),': Make a "racetrack" plot (a column plot in polar coordinates).')),Object(r.b)("h3",{id:"bars"},"Bars"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-transpose"}),"Basic"),": Make a bar plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-groups-transpose"}),"Groups"),": Make a grouped bar plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-range-transpose"}),"Range"),": Make a bar plot with each bar representing high/low (or start/end) values. Transposing this produces a gantt plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-stacked-transpose"}),"Stacked"),": Make a stacked bar plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-stacked-grouped-transpose"}),"Stacked, Grouped"),": Make a bar plot with both stacked and grouped bars."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-annotation-transpose"}),"Annotation"),": Add annotations to a bar plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-polar"}),"Polar"),": Make a rose plot (a bar plot in polar coordinates)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-polar-stacked"}),"Polar, Stacked"),": Make a stacked rose plot (a stacked bar plot in polar coordinates)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-interval-helix"}),"Helix"),": Make a bar plot in helical coordinates.")),Object(r.b)("h2",{id:"line"},"Line"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line"}),"Basic"),": Make a line plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-groups"}),"Groups"),": Make a multi-series line plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-smooth"}),"Smooth"),": Make a line plot using a smooth curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-step"}),"Step"),": Make a line plot with a step curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-step-after"}),"Step, After"),": Make a line plot with a step-after curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-step-before"}),"Step, Before"),": Make a line plot with a step-before curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-labels"}),"Labels"),": Add labels to a line plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-labels-stroked"}),"Labels, Stroked"),": Customize label rendering: add a subtle outline to labels to improve readability."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-labels-no-overlap"}),"Labels, Occlusion"),": Make a line plot with non-overlapping labels."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-line-annotation"}),"Annotation"),": Add annotations to a line plot.")),Object(r.b)("h2",{id:"path"},"Path"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-path"}),"Basic"),": Make a path plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-path-point"}),"Point"),": Make a path plot with an additional layer of points."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-path-smooth"}),"Smooth"),": Make a path plot with a smooth curve.")),Object(r.b)("h2",{id:"area"},"Area"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area"}),"Basic"),": Make an area plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-groups"}),"Groups"),": Make an area plot showing multiple categories."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-negative"}),"Negative"),": Make an area plot showing positive and negative values."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-range"}),"Range"),": Make an area plot representing a range (band) of values."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-smooth"}),"Smooth"),": Make an area plot with a smooth curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-stacked"}),"Stacked"),": Make a stacked area plot.")),Object(r.b)("h2",{id:"area--line"},"Area + Line"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-line"}),"Area + Line"),": Make an area plot with an additional line layer on top."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-line-smooth"}),"Area + Smooth"),": Make a combined area + line plot using a smooth curve."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-area-line-groups"}),"Area + Groups"),": Make an combined area + line plot showing multiple categories.")),Object(r.b)("h2",{id:"polygon"},"Polygon"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-polygon"}),"Basic"),": Make a heatmap.")),Object(r.b)("h2",{id:"schema"},"Schema"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-histogram"}),"Histogram"),": Make a histogram.")),Object(r.b)("h2",{id:"other"},"Other"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-axis-title"}),"Axis Titles"),": Display custom axis titles on a plot."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(l.a)({parentName:"li"},{href:"examples/plot-form"}),"Form"),": Display a plot inside a form.")))}c.isMDXComponent=!0},292:function(e,a,t){"use strict";t.d(a,"a",(function(){return s})),t.d(a,"b",(function(){return O}));var l=t(0),n=t.n(l);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var b=n.a.createContext({}),c=function(e){var a=n.a.useContext(b),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},s=function(e){var a=c(e.components);return n.a.createElement(b.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},u=n.a.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),s=c(t),u=l,O=s["".concat(i,".").concat(u)]||s[u]||m[u]||r;return t?n.a.createElement(O,o(o({ref:a},b),{},{components:t})):n.a.createElement(O,o({ref:a},b))}));function O(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=u;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var b=2;b<r;b++)i[b]=t[b];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);