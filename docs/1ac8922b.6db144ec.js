(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{292:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||a;return n?o.a.createElement(m,p(p({ref:t},l),{},{components:n})):o.a.createElement(m,p({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,c[1]=p;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},319:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/plot-point-groups-d949b54bdc3583a858a7cc8c46532c90.png"},81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return s}));var r=n(2),o=n(6),a=(n(0),n(292)),c={title:"Plot / Point / Groups"},p={unversionedId:"examples/plot-point-groups",id:"examples/plot-point-groups",isDocsHomePage:!1,title:"Plot / Point / Groups",description:"Make a scatterplot with categories encoded as colors.",source:"@site/docs/examples/plot-point-groups.md",slug:"/examples/plot-point-groups",permalink:"/wave/docs/examples/plot-point-groups",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/examples/plot-point-groups.md",version:"current",sidebar:"someSidebar",previous:{title:"Plot / Point / Map",permalink:"/wave/docs/examples/plot-point-map"},next:{title:"Plot / Point / Annotation",permalink:"/wave/docs/examples/plot-point-annotation"}},i=[],l={rightToc:i};function s(e){var t=e.components,c=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,c,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Make a scatterplot with categories encoded as colors."),Object(a.b)("div",{className:"cover",style:{backgroundImage:"url("+n(319).default+")"}}),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),"from synth import FakeScatter\nfrom h2o_wave import site, data, ui\n\npage = site['/demo']\n\n\ndef create_fake_row(g, f, n):\n    return [(g, x, y) for x, y in [f.next() for _ in range(n)]]\n\n\nn = 30\nf1, f2, f3 = FakeScatter(), FakeScatter(), FakeScatter()\nv = page.add('example', ui.plot_card(\n    box='1 1 4 5',\n    title='Point, groups',\n    data=data('product price performance', n * 3),\n    plot=ui.plot([ui.mark(type='point', x='=price', y='=performance', color='=product', shape='circle')])\n))\nv.data = create_fake_row('G1', f1, n) + create_fake_row('G2', f1, n) + create_fake_row('G3', f1, n)\n\npage.save()\n")))}s.isMDXComponent=!0}}]);