(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{264:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(2),r=a(6),i=(a(0),a(292)),o={title:"Wave Scripts"},s={unversionedId:"scripts",id:"scripts",isDocsHomePage:!1,title:"Wave Scripts",description:"A Wave script is the simplest way to publish content in Q, especially live web content:",source:"@site/docs/scripts.md",slug:"/scripts",permalink:"/wave/docs/scripts",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/scripts.md",version:"current",sidebar:"someSidebar",previous:{title:"Architecture",permalink:"/wave/docs/architecture"},next:{title:"Wave Apps",permalink:"/wave/docs/apps"}},c=[],p={rightToc:c};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A Wave script is the simplest way to publish content in Q, especially live web content:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Dashboards and visualizations for live monitoring."),Object(i.b)("li",{parentName:"ul"},"Live information displays: news, tickers, health, or performance data.")),Object(i.b)("p",null,"A Wave script is one kind of program you can author to interact with Q. The other kind is a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/wave/docs/apps"}),"Wave App"),". The primary difference between an app and a script is that apps are interactive (able to handle user interactions) and scripts are not. If you are not interested in handling user interactions, and only want to publish content, use a Wave script."),Object(i.b)("p",null,"Here is the skeleton of a Wave script (",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/wave/docs/tutorial-hello"}),"example"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"from h2o_wave import site, ui\n\n# Grab a reference to a page\npage = site['/foo']\n\n# Modify the page\npage['qux'] = ui.some_card()\n\n# Save the page\npage.save()\n")),Object(i.b)("p",null,"Here is the skeleton of a Wave script that continuously updates a page (",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/wave/docs/tutorial-monitor"}),"example"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import time\nfrom h2o_wave import site, ui\n\n# Grab a reference to a page\npage = site['/foo']\n\n# Grab a reference to a card on the page\ncard = page['qux']\n\n# Update the page with stats every second\nwhile True:\n    # Read data from somewhere\n    cpu_percent, mem_usage, disk_usage = read_system_stats()\n\n    # Update card's data\n    card.data[-1] = [cpu_percent, mem_usage, disk_usage]\n    \n    # Save the page\n    page.save()\n    \n    # Wait a second\n    time.sleep(1)\n")),Object(i.b)("p",null,"To update pages at a much lower frequency (say, minutes, hours, days), use a scheduler like ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cron"}),"cron")," along with a simpler Wave script:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py",metastring:"{10-17}","{10-17}":!0}),"import time\nfrom h2o_wave import site, ui\n\n# Grab a reference to a page\npage = site['/foo']\n\n# Grab a reference to a card on the page\ncard = page['qux']\n\n# Read data from somewhere\ncpu_percent, mem_usage, disk_usage = read_system_stats()\n\n# Update card's data\ncard.data[-1] = [cpu_percent, mem_usage, disk_usage]\n\n# Save the page\npage.save()\n")),Object(i.b)("p",null,"Multiple Wave scripts running on multiple devices can update the same Wave page. You can use this capability to publish a single page that displays content originating from multiple sources. For example, a single page that displays stats for all the systems in your network, or a single page that displays tickers from different stock exchanges."))}l.isMDXComponent=!0},292:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return b}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(a),m=n,b=u["".concat(o,".").concat(m)]||u[m]||d[m]||i;return a?r.a.createElement(b,s(s({ref:t},p),{},{components:a})):r.a.createElement(b,s({ref:t},p))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);